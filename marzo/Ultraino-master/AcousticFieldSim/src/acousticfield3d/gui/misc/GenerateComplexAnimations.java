package acousticfield3d.gui.misc;

import acousticfield3d.gui.MainForm;
import acousticfield3d.math.M;
import acousticfield3d.math.Vector2f;
import acousticfield3d.math.Vector3f;
import acousticfield3d.protocols.DeviceConnection;
import acousticfield3d.scene.Entity;
import acousticfield3d.scene.MeshEntity;
import acousticfield3d.scene.Scene;
import acousticfield3d.simulation.AnimKeyFrame;
import acousticfield3d.simulation.Animation;
import acousticfield3d.simulation.ControlPoint;
import acousticfield3d.simulation.Transducer;
import acousticfield3d.utils.Color;
import acousticfield3d.utils.Parse;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author am14010
 */
public class GenerateComplexAnimations extends javax.swing.JFrame {
    final MainForm mf;
    
    private boolean prevCalcFrame, prevSendFrame;
    
    public GenerateComplexAnimations(MainForm mf) {
        this.mf = mf;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        rotateSelectionsButton = new javax.swing.JButton();
        rotatePairsButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        bounceAndRotateStepsText = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        rxText = new javax.swing.JTextField();
        rotatePairsText = new javax.swing.JTextField();
        rzText = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        boundariesText = new javax.swing.JTextField();
        ryText = new javax.swing.JTextField();
        rotateSelectionsText = new javax.swing.JTextField();
        bounceAndRotateButton = new javax.swing.JButton();
        okButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        lengthText = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        circleWidthText = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        lineYButton = new javax.swing.JButton();
        stepSizeText = new javax.swing.JTextField();
        circleXZButton = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        circleHeightText = new javax.swing.JTextField();
        circleXYButton = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        lineXButton = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        circleStepSizeText = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        matrixNStepsText = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        matrixStepSizeText = new javax.swing.JTextField();
        matrixButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        quickSwapText = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        twinTrapsText = new javax.swing.JTextField();
        twinButton = new javax.swing.JButton();
        quickSwapButton = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        recalcAnimationButton = new javax.swing.JButton();
        jLabel21 = new javax.swing.JLabel();
        animWithCurrentPointsButton = new javax.swing.JButton();
        jLabel27 = new javax.swing.JLabel();
        smoothPhasesButton = new javax.swing.JButton();
        smoothPhasesText = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        atomText = new javax.swing.JTextField();
        atomButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Rotate multiple times");

        rotateSelectionsButton.setText("OK");
        rotateSelectionsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rotateSelectionsButtonActionPerformed(evt);
            }
        });

        rotatePairsButton.setText("OK");
        rotatePairsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rotatePairsButtonActionPerformed(evt);
            }
        });

        jLabel4.setText("rotate by pairs:");

        bounceAndRotateStepsText.setText("500");

        jLabel5.setText("rotate selections");

        jLabel6.setText("bounce and rotate randomly:");

        jLabel8.setText("boundaries:");

        rxText.setText("0");

        rotatePairsText.setText("0");

        rzText.setText("0");

        jLabel1.setText("rx:");

        jLabel7.setText("steps");

        boundariesText.setText("0.02 0.02 0.02");

        ryText.setText("0");

        rotateSelectionsText.setText("0");

        bounceAndRotateButton.setText("Ok");
        bounceAndRotateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bounceAndRotateButtonActionPerformed(evt);
            }
        });

        okButton.setText("OK");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        jLabel2.setText("ry:");

        jLabel3.setText("rz:");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bounceAndRotateStepsText, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(boundariesText, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bounceAndRotateButton))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rxText, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ryText, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rzText, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(okButton))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(rotatePairsText, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(rotatePairsButton))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(rotateSelectionsText, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(rotateSelectionsButton))
                            .addComponent(jLabel6))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(rxText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ryText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rzText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(okButton)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(rotatePairsText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rotatePairsButton))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(rotateSelectionsText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rotateSelectionsButton))
                .addGap(21, 21, 21)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(bounceAndRotateStepsText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(boundariesText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bounceAndRotateButton))
                .addContainerGap())
        );

        jTabbedPane1.addTab("rots and moves", jPanel3);

        lengthText.setText("0.02");

        jLabel17.setText("Width:");

        jLabel14.setText("Length:");

        jLabel13.setText("Lines");

        circleWidthText.setText("0.02");

        jLabel16.setText("Circle");

        lineYButton.setText("LineY");
        lineYButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lineYButtonActionPerformed(evt);
            }
        });

        stepSizeText.setText("0.001");

        circleXZButton.setText("XY");
        circleXZButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                circleXZButtonActionPerformed(evt);
            }
        });

        jLabel19.setText("stepSize:");

        circleHeightText.setText("0.01");

        circleXYButton.setText("XZ");
        circleXYButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                circleXYButtonActionPerformed(evt);
            }
        });

        jLabel18.setText("height:");

        lineXButton.setText("LineX");
        lineXButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lineXButtonActionPerformed(evt);
            }
        });

        jLabel15.setText("Step size:");

        circleStepSizeText.setText("0.0005");

        jLabel22.setText("Matrix");

        jLabel23.setText("nSteps");

        matrixNStepsText.setText("10 10");

        jLabel24.setText("stepSize");

        matrixStepSizeText.setText("0.001");

        matrixButton.setText("Go");
        matrixButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                matrixButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lengthText)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(stepSizeText)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lineXButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lineYButton)
                        .addGap(22, 22, 22))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel16)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(circleXZButton)
                                .addGap(34, 34, 34)
                                .addComponent(circleXYButton))
                            .addComponent(jLabel13)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel23)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(matrixNStepsText))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel17)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(circleWidthText, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel18)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(circleHeightText, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel19)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(circleStepSizeText, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel24)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(matrixStepSizeText, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(matrixButton))))
                            .addComponent(jLabel22))
                        .addContainerGap(57, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(lengthText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15)
                    .addComponent(stepSizeText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lineXButton)
                    .addComponent(lineYButton))
                .addGap(18, 18, 18)
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(circleWidthText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18)
                    .addComponent(circleHeightText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19)
                    .addComponent(circleStepSizeText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(circleXZButton)
                    .addComponent(circleXYButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel22)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(matrixNStepsText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel24)
                    .addComponent(matrixStepSizeText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(matrixButton))
                .addGap(44, 44, 44))
        );

        jTabbedPane1.addTab("Line and Circle Paths", jPanel1);

        quickSwapText.setText("200");

        jLabel9.setText("Twin-traps:");

        twinTrapsText.setText("4");

        twinButton.setText("Ok");
        twinButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                twinButtonActionPerformed(evt);
            }
        });

        quickSwapButton.setText("Play");
        quickSwapButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quickSwapButtonActionPerformed(evt);
            }
        });

        jLabel11.setText("Play animation as quick Swaps");

        jLabel10.setText("speed:");

        jLabel12.setText("wait time(ms):");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(twinTrapsText, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(twinButton))
                    .addComponent(jLabel11)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(quickSwapText, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(quickSwapButton)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(twinTrapsText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(twinButton))
                .addGap(18, 18, 18)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(quickSwapText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(quickSwapButton))
                .addContainerGap())
        );

        jTabbedPane1.addTab("twins and swaps", jPanel2);

        jLabel20.setText("recalculate current animation");

        recalcAnimationButton.setText("OK");
        recalcAnimationButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                recalcAnimationButtonActionPerformed(evt);
            }
        });

        jLabel21.setText("Animation with current points");

        animWithCurrentPointsButton.setText("OK");
        animWithCurrentPointsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                animWithCurrentPointsButtonActionPerformed(evt);
            }
        });

        jLabel27.setText("Smooth phases:");

        smoothPhasesButton.setText("OK");
        smoothPhasesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                smoothPhasesButtonActionPerformed(evt);
            }
        });

        smoothPhasesText.setText("32");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel20)
                        .addGap(18, 18, 18)
                        .addComponent(recalcAnimationButton))
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                            .addComponent(jLabel27)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(smoothPhasesText, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(smoothPhasesButton))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                            .addComponent(jLabel21)
                            .addGap(18, 18, 18)
                            .addComponent(animWithCurrentPointsButton))))
                .addContainerGap(157, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(recalcAnimationButton))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(animWithCurrentPointsButton))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel27)
                    .addComponent(smoothPhasesButton)
                    .addComponent(smoothPhasesText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(134, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("recalc", jPanel4);

        jLabel25.setText("first particle selected is the centre, the others are x,y,z rotations");

        jLabel26.setText("nSteps:");

        atomText.setText("360");

        atomButton.setText("Calc");
        atomButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                atomButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel25)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel26)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(atomText, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(atomButton)))
                .addContainerGap(49, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel25)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel26)
                    .addComponent(atomText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(atomButton))
                .addContainerGap(196, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Atom", jPanel5);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        int rx = Parse.toInt( rxText.getText() );
        int ry = Parse.toInt( ryText.getText() );
        int rz = Parse.toInt( rzText.getText() );
        
        snapBeforeCalc();
        
        while (rx > 0 || ry > 0 || rz > 0){
            disableCalc();
            
            if (rx>0){
                --rx;
                mf.movePanel.applyRotation(1, 0, 0);
            }
            if (ry>0){
                --ry;
                mf.movePanel.applyRotation(0, 1, 0);
            }
            if (rz>0){
                --rz;
                mf.movePanel.applyRotation(0, 0, 1);
            }
            
            enableAndCalc();
            
            System.out.println("calc rot " + rx + " " + ry + " " + rz);
        }
        applyAfterCalc();
    }//GEN-LAST:event_okButtonActionPerformed

    private void rotatePairsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rotatePairsButtonActionPerformed
        final int steps = Parse.toInt( rotatePairsText.getText());
        
        final ArrayList<MeshEntity> points = mf.simulation.controlPoints;
        final int n = points.size();
        
        snapBeforeCalc();
        
        for(int i = 0; i < steps; ++i){
           disableCalc();
           
           for(int j = 0; j < n/2; ++j){
               final Entity pA = points.get(j*2+0);
               final Entity pB = points.get(j*2+1);
               mf.setSelection(pA);
               mf.addToSelection(pB);
               mf.movePanel.applyRotation(0, (j%2==0) ? -1 : 1, 0);
           }
           
           enableAndCalc();
        }
        
        applyAfterCalc();
        
    }//GEN-LAST:event_rotatePairsButtonActionPerformed

    private void rotateSelectionsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rotateSelectionsButtonActionPerformed
       final int steps = Parse.toInt( rotateSelectionsText.getText());
        
       final ArrayList<Entity> sel1 = mf.movePanel.getSelection(1);
       final ArrayList<Entity> sel2 = mf.movePanel.getSelection(2);
       
       snapBeforeCalc();
       
        for(int i = 0; i < steps; ++i){
           disableCalc();
           
            mf.setSelection(sel1);
            mf.movePanel.applyRotation(0, -1, 0);
            mf.setSelection(sel2);
            mf.movePanel.applyRotation(0,  1, 0);

           enableAndCalc();
        }
        
        applyAfterCalc();
    }//GEN-LAST:event_rotateSelectionsButtonActionPerformed

    private void bounceAndRotateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bounceAndRotateButtonActionPerformed
        final int steps = Parse.toInt( bounceAndRotateStepsText.getText() );
        final Vector3f boundaries = new Vector3f( boundariesText.getText() );
        final float speed = mf.movePanel.getDisplacementStep();
        
        final ArrayList<MeshEntity> points = mf.simulation.controlPoints;
        
        final Vector3f rotVec = new Vector3f().setRandom();
        final Vector3f direction = new Vector3f().setRandom();
        final Vector3f center = Scene.calcCenter(points);
        final Vector3f cPos = center.clone();
        final Vector3f diff = new Vector3f();
        final Vector3f absDiff = new Vector3f();
        
        snapBeforeCalc();
        for(int i = 0; i < steps; ++i){
           disableCalc();

           center.subtract(cPos, diff);
           absDiff.set(diff).localABS();
           
           if (absDiff.x > boundaries.x || absDiff.y > boundaries.y || absDiff.z > boundaries.z){
               rotVec.setRandom();
               if (absDiff.x > boundaries.x){
                   direction.x = -direction.x;
               }else if (absDiff.y > boundaries.y){
                   direction.y = -direction.y;
               }else if (absDiff.z > boundaries.z){
                   direction.z = -direction.z;
               }
           }
           
           cPos.addLocalInc(direction, speed);
           mf.movePanel.applyDisplacement(direction.x, direction.y, direction.z);
           mf.movePanel.applyRotation(rotVec.x, rotVec.y, rotVec.z);

           enableAndCalc();
        }
        applyAfterCalc();
    }//GEN-LAST:event_bounceAndRotateButtonActionPerformed

    private void twinButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_twinButtonActionPerformed
        final int speed = Parse.toInt( twinTrapsText.getText() );
        final ArrayList<MeshEntity> points = mf.simulation.controlPoints;
        final ArrayList<Entity> selected = mf.selection;
        final int nPoints = points.size();
        final ArrayList<Integer> colors =  new ArrayList<>( nPoints );
        for(MeshEntity e : points){
            colors.add( e.getColor() );
        }
        
        final int steps = 256 / speed;
        
        for(int i = 0; i < 256; i+=speed){
            disableCalc();

            //calc as focal points, they are white
            for (MeshEntity e : points) {
                e.setColor(Color.WHITE);
            }
            enableAndCalc();

           //calc the twin traps, restore colors
            for(int j = 0;j < nPoints; ++j){
                points.get(j).setColor( colors.get(j) );
            }
            for(Entity e : selected){
                e.setColor(Color.create(0, i, 0, 255));
            }
            enableAndCalc();
            
        }
        
        mf.movePanel.setGenerateKeyFrame(true);
        mf.movePanel.setCalculate(true);
    }//GEN-LAST:event_twinButtonActionPerformed

    private void quickSwapButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quickSwapButtonActionPerformed
        final int msWait = Parse.toInt( quickSwapText.getText() );
        final Animation anim = mf.animPanel.getCurrentAnimation();
        final int nKeys = anim.getKeyFrames().getSize();
        for (int i = 0; i<nKeys-1; i+=2){
            mf.animPanel.setAnimationFrame(i);
            mf.transControlPanel.sendPattern();
            mf.animPanel.setAnimationFrame(i+1);
            mf.transControlPanel.sendPattern(false);
            mf.transControlPanel.sendToogleCommand();
            try {
                Thread.sleep( msWait );
            } catch (InterruptedException ex) {
                Logger.getLogger(GenerateComplexAnimations.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_quickSwapButtonActionPerformed

    private void lineXButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lineXButtonActionPerformed
        final float length = Parse.toFloat( lengthText.getText() );
        final float stepSize = Parse.toFloat( stepSizeText.getText() );

        final Vector3f pos = mf.movePanel.getBeadEntity().getTransform().getTranslation();
        final Vector3f oPos = pos.clone();
        final float initX = pos.x;
        
        final int nSteps = (int)M.ceil(length / stepSize);
        for(int i = 0; i < nSteps; ++i){
            final float x = initX - (length/2) + i*stepSize;
            pos.x = x;
            enableAndCalc();
        }
        pos.set( oPos );
        mf.needUpdate();
    }//GEN-LAST:event_lineXButtonActionPerformed

    private void lineYButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lineYButtonActionPerformed
        final float length = Parse.toFloat(lengthText.getText());
        final float stepSize = Parse.toFloat(stepSizeText.getText());

        final Vector3f pos = mf.movePanel.getBeadEntity().getTransform().getTranslation();
        final float initY = pos.y;
        final Vector3f oPos = pos.clone();
        final int nSteps = (int)M.ceil(length / stepSize);
        for (int i = 0; i < nSteps; ++i) {
            final float y = initY - (length / 2) + i * stepSize;
            pos.y = y;
            enableAndCalc();
        }
        pos.set( oPos );
        mf.needUpdate();
    }//GEN-LAST:event_lineYButtonActionPerformed

    private void circleXZButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_circleXZButtonActionPerformed
      //first step, parse the variables from text into floats
      final float height = Parse.toFloat(circleHeightText.getText());
      final float width = Parse.toFloat(circleWidthText.getText());
      final float stepSize = Parse.toFloat(stepSizeText.getText());
      
      //calculating the circunference        
      final float p=M.TWO_PI*M.sqrt((width*width+height*height)/2);
      
      //how many steps do we need
      final int nSteps = (int)M.floor( p/stepSize );
      final Vector3f pos = mf.movePanel.getBeadEntity().getTransform().getTranslation();
      final Vector3f iPos = pos.clone();
      
      //for, iterate from i=0 to nSteps
      for(int i = 0; i < nSteps; ++i){
          final float angle = i*M.TWO_PI/nSteps;
          //set the position of pos to the target one
           pos.x = iPos.x + M.cos(angle)*(width/2);
           pos.y = iPos.y + M.sin(angle)*(height/2);
                    
        enableAndCalc();
      }
                
      mf.needUpdate();
    }//GEN-LAST:event_circleXZButtonActionPerformed

    private void circleXYButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_circleXYButtonActionPerformed
      //first step, parse the variables from text into floats
      final float height = Parse.toFloat(circleHeightText.getText());
      final float width = Parse.toFloat(circleWidthText.getText());
      final float stepSize = Parse.toFloat(stepSizeText.getText());
      
      //calculating the circunference        
      final float p=M.TWO_PI*M.sqrt((width*width+height*height)/2);
      
      //how many steps do we need
      final int nSteps = (int)M.floor( p/stepSize );
      final Vector3f pos = mf.movePanel.getBeadEntity().getTransform().getTranslation();
      final Vector3f iPos = pos.clone();
      
      //for, iterate from i=0 to nSteps
      for(int i = 0; i < nSteps; ++i){
          final float angle = i*M.TWO_PI/nSteps;
          //set the position of pos to the target one
           pos.x = iPos.x + M.cos(angle)*(width/2);
           pos.z = iPos.z + M.sin(angle)*(height/2);
                    
        enableAndCalc();
      }
                
      mf.needUpdate();
    }//GEN-LAST:event_circleXYButtonActionPerformed

    private void recalcAnimationButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_recalcAnimationButtonActionPerformed
        final Animation cAnim = mf.animPanel.getCurrentAnimation();
        for(AnimKeyFrame k : cAnim.keyFrames.getElements()){
            k.apply();
            mf.algForm.runBFGS(false,false,true);
            k.snap( mf.simulation );
        }
    }//GEN-LAST:event_recalcAnimationButtonActionPerformed

    private void animWithCurrentPointsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_animWithCurrentPointsButtonActionPerformed
        final ArrayList<MeshEntity> points = mf.simulation.controlPoints;
        for(MeshEntity p : points){
            mf.trapsPanel.applyOnPosition(p.getTransform().getTranslation());
            //add the keyframe
            mf.animPanel.addKeyFrame();
        }
    }//GEN-LAST:event_animWithCurrentPointsButtonActionPerformed

    private void matrixButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_matrixButtonActionPerformed
        final Vector2f size = new Vector2f().parse(matrixNStepsText.getText());
        final float stepSize = Parse.toFloat( matrixStepSizeText.getText() );
        final int xSteps = (int)size.x;
        final int zSteps = (int)size.y;
        
        final Vector3f pos = mf.movePanel.getBeadEntity().getTransform().getTranslation();
        final Vector3f oPos = pos.clone();
        
        final float initX = pos.x - stepSize*xSteps/2;
        final float initZ = pos.z - stepSize*zSteps/2;
        
        for (int ix = 0; ix < xSteps; ++ix){
            for (int iz = 0; iz < zSteps; ++iz){
                pos.x = initX + stepSize*ix;
                pos.z = initZ + stepSize*iz;
                enableAndCalc();
            }
        }
        
        pos.set( oPos );
        mf.needUpdate();
    }//GEN-LAST:event_matrixButtonActionPerformed

    private void atomButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_atomButtonActionPerformed
       final int steps = Parse.toInt( atomText.getText());
        
       if (mf.selection.size() < 4){ return; }
       
       final Vector3f cP = mf.selection.get(0).getTransform().getTranslation();
       final Vector3f xP = mf.selection.get(1).getTransform().getTranslation();
       final Vector3f yP = mf.selection.get(2).getTransform().getTranslation();
       final Vector3f zP = mf.selection.get(3).getTransform().getTranslation();
       final float distX = cP.distance( xP );
       final float distY = cP.distance( yP );
       final float distZ = cP.distance( zP );
       
       snapBeforeCalc();
       
       final float rads = M.TWO_PI / steps;
       
       for(int i = 0; i < steps; ++i){
           disableCalc();
           final float tRads = rads * i;
            final float cos = M.cos( tRads );
            final float sin = M.sin( tRads );
            
            xP.y = cP.y + distX * cos; xP.z = cP.z + distX * sin;
            yP.z = cP.z + distY * cos; yP.x = cP.x + distY * sin;
            zP.x = cP.x + distZ * cos; zP.y = cP.y + distZ * sin;
           
           enableAndCalc();
        }
        
        applyAfterCalc();
    }//GEN-LAST:event_atomButtonActionPerformed

    private void smoothPhasesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_smoothPhasesButtonActionPerformed
        final int smoothSteps = Parse.toInt( smoothPhasesText.getText() );
        final Animation cAnim = mf.animPanel.getCurrentAnimation();
        final ArrayList<AnimKeyFrame> keyFrames = cAnim.keyFrames.getElements();
        for (int i = 1; i < keyFrames.size(); i++) {
            AnimKeyFrame prev = keyFrames.get(i - 1);
            AnimKeyFrame next = keyFrames.get(i);
            float minDist = Float.MAX_VALUE;
            int minStep = 0;
            for (int j = 0; j < smoothSteps; j++) {
                float dist = 0;
                for (Transducer t : prev.getTransPhases().keySet()){
                    final float phase1 = prev.getTransPhases().get(t) * M.PI;
                    final float phase2 = next.getTransPhases().get(t) * M.PI;
                    dist += M.abs(  M.angleDiff(phase1, phase2 + M.TWO_PI*j/smoothSteps) );
                }
                if (dist < minDist){
                    minStep = j;
                    minDist = dist;
                }
            }
            for (Transducer t : next.getTransPhases().keySet()){
                final float phase = next.getTransPhases().get(t) * M.PI;
                next.getTransPhases().put(t, (phase + M.TWO_PI*minStep/smoothSteps) / M.PI);
            }
        }
    }//GEN-LAST:event_smoothPhasesButtonActionPerformed

  
    private void disableCalc() {
        mf.movePanel.setGenerateKeyFrame(false);
        mf.movePanel.setCalculate(false);
    }

    private void enableAndCalc() {
        mf.movePanel.setGenerateKeyFrame(true);
        mf.movePanel.setCalculate(true);
        mf.movePanel.applyDisplacement(0, 0, 0);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton animWithCurrentPointsButton;
    private javax.swing.JButton atomButton;
    private javax.swing.JTextField atomText;
    private javax.swing.JButton bounceAndRotateButton;
    private javax.swing.JTextField bounceAndRotateStepsText;
    private javax.swing.JTextField boundariesText;
    private javax.swing.JTextField circleHeightText;
    private javax.swing.JTextField circleStepSizeText;
    private javax.swing.JTextField circleWidthText;
    private javax.swing.JButton circleXYButton;
    private javax.swing.JButton circleXZButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField lengthText;
    private javax.swing.JButton lineXButton;
    private javax.swing.JButton lineYButton;
    private javax.swing.JButton matrixButton;
    private javax.swing.JTextField matrixNStepsText;
    private javax.swing.JTextField matrixStepSizeText;
    private javax.swing.JButton okButton;
    private javax.swing.JButton quickSwapButton;
    private javax.swing.JTextField quickSwapText;
    private javax.swing.JButton recalcAnimationButton;
    private javax.swing.JButton rotatePairsButton;
    private javax.swing.JTextField rotatePairsText;
    private javax.swing.JButton rotateSelectionsButton;
    private javax.swing.JTextField rotateSelectionsText;
    private javax.swing.JTextField rxText;
    private javax.swing.JTextField ryText;
    private javax.swing.JTextField rzText;
    private javax.swing.JButton smoothPhasesButton;
    private javax.swing.JTextField smoothPhasesText;
    private javax.swing.JTextField stepSizeText;
    private javax.swing.JButton twinButton;
    private javax.swing.JTextField twinTrapsText;
    // End of variables declaration//GEN-END:variables

    private void applyAfterCalc() {
        mf.movePanel.setGenerateKeyFrame(prevSendFrame);
        mf.movePanel.setCalculate(prevCalcFrame);
    }

    private void snapBeforeCalc() {
        prevCalcFrame =  mf.movePanel.isCalculate();
        prevSendFrame = mf.movePanel.isCalculate();
    }
}
